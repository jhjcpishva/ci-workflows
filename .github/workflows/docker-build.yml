name: Build & Push Docker Image

on:
  workflow_call:
    inputs:
      platforms:
        type: string
        default: linux/amd64,linux/arm64
    secrets:
      GHCR_TOKEN:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image_name: ${{ steps.set-image-name.outputs.image_name }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Set image name
        id: set-image-name
        run: |
          echo "image_name=ghcr.io/$(echo '${{ github.repository }}' | \
          tr '[:upper:]' '[:lower:]')" | \
          tee -a $GITHUB_OUTPUT >> $GITHUB_ENV

      - name: Build (no push)
        run: |
          docker buildx build \
            --platform ${{ inputs.platforms }} \
            -t $image_name:latest .

  push:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Login GHCR
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Use build output image name
        run: echo "IMAGE_NAME=${{ needs.build.outputs.image_name }}" >> $GITHUB_ENV

      - name: Tag & Push
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          [[ "$TAG" == "$GITHUB_REF" ]] && TAG=latest
          docker buildx build \
            --platform ${{ inputs.platforms }} \
            -t $IMAGE_NAME:$TAG \
            --push .